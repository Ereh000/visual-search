<section class=" block-{{ block.id }} vs-sg-search-suggestions-wrapper">
  <div class="vs-sg-search-suggestions">
    <div class="vs-sg-search-suggestions-container">
      <div class="vs-sg-popular-query">
        <h3>Popular Query</h3>
        <div class="vs-sg-popular-query-grid">
          <span class="vs-sg-query-item">Merino Wool Socks</span>
          <span class="vs-sg-query-item">Merino Wool Socks Mid Length</span>
          <span class="vs-sg-query-item">Merino Wool Socks Full Length</span>
          <span class="vs-sg-query-item">Cotton Work Socks Mid Length (Pack of 3)</span>
          <span class="vs-sg-query-item">Hybrid Vest</span>
          <span class="vs-sg-query-item">Hose Down T-shirt</span>
          <span class="vs-sg-query-item">Hose Down Shorts</span>
          <span class="vs-sg-query-item">Cotton Work Socks Full Length (Pack of 3)</span>
          <span class="vs-sg-query-item">Monsoon Nunatak Smock</span>
          <span class="vs-sg-query-item">Baseline Pull-on Zip Top</span>
          <span class="vs-sg-query-item">Ballistic Fleece Hoodie</span>
        </div>
      </div>

      <div class="vs-sg-popular-search-products">
        <h3>Popular Search Product Images</h3>
        <div class="vs-sg-popular-products-grid">
          <a href="/products/merino-wool-socks-orange" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
          <a href="/products/merino-wool-socks-green" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
          <a href="/products/merino-wool-socks-multi" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
          <a href="/products/hybrid-vest" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
          <a href="/products/hose-down-tshirt" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
          <a href="/products/hose-down-shorts" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
            >
          </a>
        </div>
      </div>

      <!-- Dynamic search results section -->
      <div class="vs-sg-dynamic-search-results" style="display: none;">
        <h3>Search Results</h3>
        <div class="vs-sg-dynamic-products-grid">
          <!-- Dynamic products will be loaded here -->
          <div class="vs-sg-loading" style="text-align: center; padding: 20px;">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="vs-sg-spinner"
            >
              <circle cx="12" cy="12" r="10"></circle>
              <path d="M12 6v6l4 2"></path>
            </svg>
            <p>Searching products...</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  {% comment %} {% render 'image-search-snippet' %} {% endcomment %}
</section>

<style>
  .vs-sg-search-suggestions-wrapper .vs-snp-image-search-error {
    position: static !important;
    transform: none !important;
    z-index: 9;
    box-shadow: 2px 2px;
  }
</style>

{% schema %}
{
  "name": "Search Suggestions",
  "target": "body",
  "stylesheet": "search-suggestions.css",
  "settings": [
    {
      "type": "header",
      "content": "Popular Queries"
    },
    {
      "type": "checkbox",
      "id": "show_popular_queries",
      "label": "Show Popular Queries",
      "default": true
    },
    {
      "type": "header",
      "content": "Popular Products"
    },
    {
      "type": "checkbox",
      "id": "show_popular_products",
      "label": "Show Popular Product Images",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_dynamic_search",
      "label": "Enable Dynamic Search Results",
      "default": true
    },
    {
      "type": "range",
      "id": "search_delay",
      "min": 100,
      "max": 1000,
      "step": 100,
      "unit": "ms",
      "label": "Search Delay",
      "default": 300,
      "info": "Delay before searching after typing stops"
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const suggestionsWrapper = document.querySelector('.vs-sg-search-suggestions-wrapper');
    const searchForms = document.querySelectorAll('header form[action="/search"]');

    if (!suggestionsWrapper || searchForms.length === 0) return;

    // Clone the suggestions wrapper for each search form
    searchForms.forEach((form) => {
      // Clone the suggestions wrapper 
      const clonedSuggestions = suggestionsWrapper.cloneNode(true);

      // Append it to the form - it will be visible by default
      form.appendChild(clonedSuggestions);

      // Find search input within this form
      const searchInput = form.querySelector('input[type="search"], [name="q"], .search-input, .search__input');

      if (searchInput) {
        // Get dynamic search elements
        const dynamicSearchResults = clonedSuggestions.querySelector('.vs-sg-dynamic-search-results');
        const dynamicProductsGrid = clonedSuggestions.querySelector('.vs-sg-dynamic-products-grid');
        const popularQuery = clonedSuggestions.querySelector('.vs-sg-popular-query');
        const popularProducts = clonedSuggestions.querySelector('.vs-sg-popular-search-products');
        const popularProductsGrid = clonedSuggestions.querySelector('.vs-sg-popular-products-grid'); // Get the popular products grid
        const popularQueryItems = clonedSuggestions.querySelectorAll('.vs-sg-query-item'); // Get the popular query items

        // Set up debounce function for search
        let searchTimeout;
        const searchDelay = 300; // milliseconds

        // Add input event listener for dynamic search
        searchInput.addEventListener('input', function () {
          const query = this.value.trim();

          // Clear previous timeout
          clearTimeout(searchTimeout);

          if (query.length > 0) {
            // Show loading state
            dynamicSearchResults.style.display = 'block';
            popularQuery.style.display = 'none';
            popularProducts.style.display = 'none';

            // Set timeout for debounce
            searchTimeout = setTimeout(() => {
              fetchSearchResults(query, dynamicProductsGrid);
            }, searchDelay);
          } else {
            // Show default content when query is too short
            dynamicSearchResults.style.display = 'none';
            popularQuery.style.display = 'block';
            popularProducts.style.display = 'block';
          }
        });

        // Hide suggestions when search input has value and is submitted
        form.addEventListener('submit', function (e) {
          if (searchInput.value.trim()) {
            // Only hide if there's actual search text
            clonedSuggestions.style.display = 'none';
          }
        });

        // Add click listeners to popular product images
        if (popularProductsGrid) {
          const popularImageLinks = popularProductsGrid.querySelectorAll('.vs-sg-product-image');
          popularImageLinks.forEach((link) => {
            link.addEventListener('click', function (e) {
              e.preventDefault(); // Prevent default link navigation

              const imageUrl = this.querySelector('img').src;
              if (imageUrl) {
                // Find the image search modal and file input within the form
                const imageSearchModal = form.querySelector('#vs-search-bar-modal');
                const fileInput = imageSearchModal
                  ? imageSearchModal.querySelector('#vs-snp-image-search-file-input')
                  : null;

                if (imageSearchModal && fileInput) {
                  // Open the image search modal
                  imageSearchModal.classList.add('active');

                  // Fetch the image and trigger the file input change event
                  fetch(imageUrl)
                    .then((response) => response.blob())
                    .then((blob) => {
                      // Create a File object from the blob
                      const file = new File([blob], 'popular-image.jpg', { type: blob.type });

                      // Assign the file to the file input and trigger the change event
                      // This will trigger the processImage function in the image search snippet
                      const dataTransfer = new DataTransfer();
                      dataTransfer.items.add(file);
                      fileInput.files = dataTransfer.files;
                      fileInput.dispatchEvent(new Event('change', { bubbles: true }));

                      // Hide the search suggestions wrapper
                      clonedSuggestions.style.display = 'none';
                    })
                    .catch((error) => {
                      console.error('Error fetching popular image for search:', error);
                      // Optionally display an error message in the image search modal
                    });
                } else {
                  console.error('Image search modal or file input not found.');
                }

                // Add event listener to hide the modal when clicking outside
                if (imageSearchModal) {
                  imageSearchModal.addEventListener('click', function (event) {
                    // Check if the click target is the modal itself (the overlay)
                    if (event.target === imageSearchModal) {
                      imageSearchModal.classList.remove('active');
                      document.querySelector('.vs-snp-image-upload-result-wrapper').forEach((wrapper) => {
                        // wrapper.style.display = 'none';
                        console.log('cliked outside')
                        wrapper.classList.remove('after');
                      });
                      // Optionally reset the modal content here if needed
                      // e.g., clear preview, results, errors
                    }
                  });
                }
              }
            });
          });
        }

        // Add click listeners to popular query items
        if (popularQueryItems.length > 0) {
          popularQueryItems.forEach((item) => {
            item.addEventListener('click', function () {
              console.log('hiiiiiiiiiii')
              
              const query = this.textContent.trim();
              if (query) {
                // Set the search input value
                searchInput.value = query;

                // Manually dispatch an input event to trigger the listener
                searchInput.dispatchEvent(new Event('input', { bubbles: true }));

                // Trigger the search immediately (or let the input event listener handle debounce)
                // We can remove the direct call to fetchSearchResults here
                clearTimeout(searchTimeout); // Clear any pending input search
                dynamicSearchResults.style.display = 'block';
                popularQuery.style.display = 'none';
                popularProducts.style.display = 'none';
                fetchSearchResults(query, dynamicProductsGrid);
              }
            });
          });
        }
      }
    });

    // Function to fetch search results
    function fetchSearchResults(query, resultsContainer) {
      // Show loading state
      resultsContainer.innerHTML = `
        <div class="vs-sg-loading" style="text-align: center; padding: 20px;">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="vs-sg-spinner">
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M12 6v6l4 2"></path>
          </svg>
          <p>Searching products...</p>
        </div>
      `;

      // Fetch products from Shopify Predictive Search API
      fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product`)
        .then((response) => response.json())
        .then((data) => {

        // hide the seach wrapper
        document.querySelector('.vs-snp-image-search-modal').style.display = 'none';

          // Process search results
          const products = data.resources.results.products || [];

          if (products.length > 0) {
            // Build HTML for products
            let productsHTML = '';

            products.slice(0, 6).forEach((product) => {
              productsHTML += `
                <a href="${product.url}" class="vs-sg-product-image">
                  <img src="${
                    product.image ||
                    'https://cdn.shopify.com/s/files/1/0533/2089/files/placeholder-images-image_large.png'
                  }" alt="${product.title}" loading="lazy">
                  <div class="vs-content-wrapper">
                    <div class="vs-sg-product-title">${product.title}</div>
                    <div class="vs-sg-product-price">${product.price}</div>
                  </div>
                </a>
              `;
            });

            resultsContainer.innerHTML = productsHTML;
          } else {
            // No results found
            resultsContainer.innerHTML =
              '<p class="vs-sg-no-results">No products found. Try a different search term.</p>';
          }
        })
        .catch((error) => {
          console.error('Error fetching search results:', error);
          resultsContainer.innerHTML = '<p class="vs-sg-error">Error loading search results. Please try again.</p>';
        });
    }

    // Add CSS for spinner animation
    const style = document.createElement('style');
    style.textContent = `
      @keyframes vs-sg-spin {
        to { transform: rotate(360deg); }
      }
      .vs-sg-spinner {
        animation: vs-sg-spin 1s linear infinite;
      }
      .vs-sg-product-title {
        margin-top: 8px;
        font-size: 14px;
        font-weight: 500;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
      .vs-sg-product-price {
        font-size: 13px;
        color: #555;
        margin-top: 4px;
      }
      .vs-sg-no-results, .vs-sg-error {
        text-align: center;
        padding: 20px;
        color: #555;
      }
    `;
    document.head.appendChild(style);

    // Remove the original template element
    suggestionsWrapper.remove();
    document.addEventListener('click', function (e) {
      e.stopPropagation();
      const isClickInside = suggestionsWrapper.contains(e.target);
      const isbarImageModel = document.querySelector('.vs-snp-image-search-modal');
      console.log('cliked outside')
      if (!isClickInside) {
        // suggestionsWrapper.style.display = 'none';
        console.log("cliked outsideeee");

        // Remove Post Image upload styling (dont't remove these)
        document.querySelector('.vs-snp-image-search-modal-content').classList.remove('after');
        document.querySelector('.vs-snp-image-search-modal-header').classList.remove('after');
        document.querySelector('.vs-snp-image-upload-result-wrapper').classList.remove('after');
        document.querySelector('.vs-snp-image-search-modal-body').classList.remove('after');
        document.querySelector('.vs-snp-image-search-upload-area').classList.remove('after');
        document.querySelector('.vs-snp-image-search-results').classList.remove('after');
        document.querySelector('.vs-snp-image-search-popular').classList.remove('after');
        document.querySelector('.vs-snp-image-search-upload-area').classList.remove('has-content');
        document.querySelector('.vs-snp-upload-another-button').style.display = 'none';
        // if(!isbarImageModel){
        //   document.querySelector('.vs-search-bar-modal').classList.remove('active')
        // }
        document.querySelector('form[action="/search"] .vs-sg-search-suggestions-wrapper').style.display = 'block';

        document.querySelector('.vs-sg-dynamic-search-results').style.display = 'none';
        document.querySelector('.vs-sg-popular-search-products').style.display = 'block';
        document.querySelector('.vs-sg-popular-query').style.display = 'block';
        // Remove Post Image upload styling ends
      }
    });
  });
</script>
